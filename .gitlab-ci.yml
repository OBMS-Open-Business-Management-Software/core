include:
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'
  - template: 'Code-Quality.gitlab-ci.yml'

stages:
  - test
  - release

variables:
  GITLAB_TOKEN: $GL_PAS
  GITLAB_URL: "https://gitlab.com"
  GITLAB_PREFIX: "/api/v4"

.only_mr:
  rules:
    - if: $CI_MERGE_REQUEST_IID

.node_caching:
  cache:
    key: "node"
    paths:
      - node_modules/

lint:commit:
  stage: test
  extends:
    - .only_mr
    - .node_caching
  image: node:17.5.0
  before_script:
    - npm ci
  variables:
    GIT_DEPTH: 0
  script:
    - npx commitlint --from="$(git merge-base HEAD "origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}")"

.composer_caching:
  cache:
    paths:
      - vendor/

.composer_project_installed:
  extends:
    - .composer_caching
  image: php:8.1.3-fpm
  before_script:
    - apt-get update && apt-get install -qqy git unzip
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    - composer install --ignore-platform-reqs
    - composer install --working-dir=tools/php-cs-fixer --ignore-platform-reqs

check:code:
  stage: test
  extends:
    - .composer_project_installed
  script:
    - vendor/bin/phpstan analyse --memory-limit=2G

lint:styles:
  stage: test
  image: node:17.5.0
  script:
    - npm ci
    - npx stylelint --custom-formatter=node_modules/stylelint-formatter-gitlab .
  artifacts:
    reports:
      codequality: gl-codequality.json

# TODO: Make the setup base on custom IPvX image so migrations can be performed.
#unit:test:
#  stage: test
#  extends:
#    - .composer_project_installed
#  script:
#    - cp .env.example .env
#    - php artisan key:generate
#    - php artisan migrate
#    - vendor/bin/phpunit

.only_main:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.release_setup:
  image: node:17
  stage: release
  before_script:
    - npm ci

release:test:
  extends:
    - .release_setup
    - .node_caching
    - .only_mr
  needs: []
  script:
    - npx semantic-release --dry-run --no-ci --branches "${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}"

release:perform:
  extends:
    - .release_setup
    - .node_caching
    - .only_main
  script:
    - npx semantic-release
